plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'maven-publish'
}


android {
    namespace 'com.pizza11x.androidutilskit'
    compileSdk 33

    signingConfigs {
        release {
        }
    }
    defaultConfig {
        minSdk 26
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    def ktx_version = '2.6.0-alpha03'
    def core_version = '1.9.0'
    def app_compact_version = '1.5.1'
    def material_version = '1.7.0'
    def databinding_version = '7.3.1'
    def coroutines_version = '1.6.4'
    def dagger_hilt_version = '2.44.1'
    def retrofit_version = "2.9.0"
    def okhttp_version = '5.0.0-alpha.10'
    def picasso_version = '2.71828'
    def kotlin_stdlib_version = '1.7.21'
    def annotation_version = '1.5.0'
    def room_version = '2.4.3'

    api "androidx.core:core-ktx:$core_version"
    api "androidx.appcompat:appcompat:$app_compact_version"
    api "com.google.android.material:material:$material_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_stdlib_version"
    implementation "androidx.annotation:annotation:$annotation_version"


    /* DATABINDING */
    api "androidx.databinding:databinding-runtime:$databinding_version"
    kapt "androidx.databinding:databinding-compiler:$databinding_version"


    /* KTX */
    api "androidx.lifecycle:lifecycle-runtime-ktx:$ktx_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$ktx_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$ktx_version"
    api "androidx.navigation:navigation-ui-ktx:$ktx_version"
    api "androidx.navigation:navigation-fragment-ktx:$ktx_version"
    api "androidx.navigation:navigation-dynamic-features-fragment:$ktx_version"

    /* COROUTINES */
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    /* DAGGER HILT */
    api "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    /* RETROFIT */
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"

    /* OKHTTP */
    api "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    /* PICASSO */
    api "com.squareup.picasso:picasso:$picasso_version"

    /* ROOM */
    implementation "androidx.room:room-runtime:$room_version"

    /* ENCRYPTED SHARED PREFERENCE */
    implementation 'androidx.security:security-crypto:1.1.0-alpha04'

    def junit_version = '4.13.2'
    def junit_ext_version = '1.1.4'
    def espresso_version = '3.5.0'
    def core_testing_version = '2.1.0'
    def mock_version = '1.13.2'

    /* TEST */
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "io.mockk:mockk:$mock_version"
    androidTestImplementation "io.mockk:mockk-android:$mock_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
    testImplementation "androidx.room:room-testing:$room_version"
}



afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.pizza11x'
                artifactId = 'android-Utils-kit'
                version = '1.0'
            }
        }
    }
}
kapt {
    correctErrorTypes true
}

android {
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
    namespace 'com.pizza11x.androidutilskit'
}